name: Crypto Portfolio Monitor

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Run crypto monitor
      env:
        SHEETS_URL: ${{ secrets.SHEETS_URL }}
        EMAIL: ${{ secrets.EMAIL }}
      run: |
        node -e "
        const https = require('https');
        const SHEETS_URL = process.env.SHEETS_URL;
        const EMAIL = process.env.EMAIL;
        
        // Your portfolio configuration
        const portfolio = [
          { symbol: 'ETH', name: 'Ethereum', holdings: 6.84722883, targets: [
            { level: 1, price: 10500, percentage: 30, description: 'First profit target (2.5x)' },
            { level: 2, price: 25200, percentage: 40, description: 'Second profit target (6.0x)' },
            { level: 3, price: 33600, percentage: 30, description: 'Final profit target (8.0x)' }
          ]},
          { symbol: 'SOL', name: 'Solana', holdings: 147.26348532, targets: [
            { level: 1, price: 900, percentage: 30, description: 'First profit target (5.0x)' },
            { level: 2, price: 1600, percentage: 40, description: 'Second profit target (8.8x)' },
            { level: 3, price: 2200, percentage: 30, description: 'Final profit target (12.1x)' }
          ]},
          { symbol: 'LINK', name: 'Chainlink', holdings: 763.90533, targets: [
            { level: 1, price: 67, percentage: 30, description: 'First profit target (3.0x)' },
            { level: 2, price: 112, percentage: 40, description: 'Second profit target (5.0x)' },
            { level: 3, price: 134, percentage: 30, description: 'Final profit target (6.0x)' }
          ]}
        ];
        
        console.log('ðŸš€ Starting crypto monitor check...');
        
        // Fetch prices
        https.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum,solana,chainlink,cardano,aave,ripple,theta-token,vechain,polkadot,cosmos&vs_currencies=usd', (res) => {
          let data = '';
          res.on('data', chunk => data += chunk);
          res.on('end', () => {
            const prices = JSON.parse(data);
            const priceMap = {
              'ETH': prices.ethereum?.usd || 0,
              'SOL': prices.solana?.usd || 0,
              'LINK': prices.chainlink?.usd || 0
            };
            
            console.log('Current prices:', priceMap);
            
            // Check targets
            portfolio.forEach(coin => {
              const currentPrice = priceMap[coin.symbol];
              if (currentPrice) {
                coin.targets.forEach(target => {
                  if (currentPrice >= target.price) {
                    console.log('ðŸš€ PROFIT TARGET HIT:', coin.symbol, 'at', currentPrice);
                  }
                });
              }
            });
            
            console.log('âœ… Monitor check completed');
          });
        });
        "
